name: Fortify AST Scan

# Customize trigger events based on your DevSecOps process and/or policy
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
#  schedule:
#    - cron: '19 14 * * 2'
  workflow_dispatch:

jobs:
  Fortify-AST-Scan:
    # Use the appropriate runner for building your source code. Ensure dev tools required to build your code are present and configured appropriately (MSBuild, Python, etc).
    runs-on: ubuntu-latest

    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v4
      # Java is required to run the various Fortify utilities. Ensuring proper version is installed on the runner.
      - name: Setup Java
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set SCANCENTRAL_JAVA_HOME, restore original JAVA_HOME and PATH
        run: |
          echo "SCANCENTRAL_JAVA_HOME=${{ env.JAVA_HOME }}" >> ${GITHUB_ENV}
      - name: Setup Fortify tools
        uses: fortify/github-action/setup@v1.2.2
        with:
          tool-definitions: https://github.com/fortify/tool-definitions/releases/download/v1/tool-definitions.yaml.zip
          export-path: true
          fcli: latest
          sc-client: latest
          vuln-exporter: latest
          bugtracker-utility: skip
          debricked-cli: skip
      - name: Run fcli from PATH
        run: fcli -V
      - name: Run fcli using FCLI_CMD environment variable
        run: ${FCLI_CMD} -V
      - name: Run scancentral from PATH
        run: scancentral --version
      - name: Run scancentral using SC_CLIENT_CMD environment variable
        run: ${SC_CLIENT_CMD} -h

      - name: Package for SAST
        uses: fortify/github-action/package@main

      - name: Start SAST scan
        uses: fortify/github-action/internal/run@main
        env:
          DO_WAIT: false
          DO_EXPORT: true
          SSC_URL: ${{ secrets.SSC_URL }}
          SC_CONTROLLER_URL: ${{ secrets.SC_CONTROLLER_URL }}
          SSC_TOKEN: ${{ secrets.SSC_TOKEN }}
          SSC_UPLOAD_TOKEN: ${{ secrets.SSC_UPLOAD_TOKEN }}
        with:
          cmd: '"${SC_CLIENT_CMD}" -url ${SC_CONTROLLER_URL} start -bt none -block -o -f result.fpr -upload -application "github_action" -version "test1" -uptoken ${SSC_UPLOAD_TOKEN}'